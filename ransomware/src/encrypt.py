import os
from sys import argv
from string import ascii_letters, digits
from secrets import choice

from collections import deque
from typing import Iterable
from Crypto.Protocol.KDF import PBKDF2
from Crypto.Random import get_random_bytes


CHARS = ascii_letters + digits + '+-!@#$%^&*()_[]{};:,.<>?|'


def all_files(full_path_folder: str) -> Iterable:
    '''Returns a list(deque) with all the files in
    the given folder.'''
    list_of_all_files = deque()
    try:

        for root, __, files in os.walk(full_path_folder):
            for file in files:
                list_of_all_files.append(os.path.join(root, file))

        return list_of_all_files

    except FileNotFoundError:
        print(f"The folder '{full_path_folder}' does not exist.")
    except PermissionError:
        print(f"Without permission to access '{full_path_folder}'.")

    return list_of_all_files


def gen_AES_random_key():
    r_passphrase = ''.join(choice(CHARS) for _ in range(64))
    salt = get_random_bytes(32)
    key = PBKDF2(r_passphrase, salt, dkLen=64, count=100000)
    return key


if __name__ == '__main__':

    TARGET = None
    if len(argv) == 2 and argv[1] == 'test':
        from dotenv import load_dotenv
        load_dotenv()
        TARGET = os.getenv('TARGET')
    TARGET = '' if TARGET == None else TARGET

    print('target:', TARGET)

    files = all_files(TARGET)
    print(files)
    print(gen_AES_random_key())
